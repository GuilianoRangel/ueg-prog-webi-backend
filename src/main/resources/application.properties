springdoc.version=v1
app.api.version=v1
app.api.base=/api/${app.api.version}
app.api.swagger.title=Faculdade Somos todos N&oacute;s API
app.api.swagger.base-package=br.ueg.prog.webi.faculdade
app.api.security.url-auth-controller=/api/${app.api.version}/auth
app.api.security.jwt.token-expire-in=36000
#app.api.security.jwt.token-refresh-in=3600

spring.datasource.url=jdbc:postgresql://localhost:5433/faculdade
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
# create - cria as tabelas na inicializacao caso nao existam.
# update - atualizacao o schema se necessario -- UTILIZAR ESSE METODO PARA PRIMEIRA EXECUCAO, DEPOIS VOLTAR PARA none
# create-drop -- para apagar e recriar a base.
# none -- para nao fazer nada

#Configiuraçoes de paginação
spring.data.web.pageable.size-parameter=size
spring.data.web.pageable.page-parameter=page
spring.data.web.pageable.default-page-size=20
spring.data.web.pageable.one-indexed-parameters=false
spring.data.web.pageable.max-page-size=2000
spring.data.web.pageable.prefix=
spring.data.web.pageable.qualifier-delimiter=_

#para mostrar SQL
spring.jpa.properties.hibernate.format_sql=true
#para mostrar os parametros da sql
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=trace
# Set to enable hot deployment
spring.devtools.restart.enabled=true
# restart directory
spring.devtools.restart.additional-paths=src/main/java
spring.devtools.restart.exclude: WEB-INF/**


server.error.include-message=always
server.error.include-stacktrace=never

#TODO alteracao moduleadmin
spring.messages.basename=messages,messages-arquitetura,messages-moduleadmin
app.api.auth.url-redefinir-senha=http://localhost:4200/acesso/alterar-senha/
